{"version":3,"sources":["containers/Room/index.js"],"names":["Room","window","location","href","includes","hostConnect","room","this","props","currentRoom","roomList","filter","r","id","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","onClick","stopStream","socketClient","emitLeftRoom","antd__WEBPACK_IMPORTED_MODULE_10__","width","height","autoPlay","host","name","peers","length","map","c","key","Component","connect","state","user","dispatch","verify","verifyAction"],"mappings":"+MAOMA,8LAGMC,OAAOC,SAASC,KAAKC,SAAS,UAC9BC,+CAGC,IAIEC,EAAQC,KAAKC,MAAbF,KACDG,EAAeH,EAAKI,SAASC,OAAO,SAAAC,GAAC,OAAIA,EAAEC,IAAMP,EAAKG,cAAc,IAAM,KAChF,OACIK,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,QACLC,QAAS,WACLC,cACAC,IAAaC,aAAad,EAAYI,GAAI,QAGlDC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,uBAGAV,EAAAC,EAAAC,cAAA,SAAOH,GAAG,UAAUY,MAAM,QAAQC,OAAO,QAAQC,UAAQ,IACzDb,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAmB,MAAfP,EAAsBA,EAAYmB,KAAKC,KAAO,KACtC,MAAfpB,GAAuBA,EAAYqB,MAAMC,OAAS,GAAKtB,EAAYqB,MAAME,IAAI,SAAAC,GAAC,OAC3EnB,EAAAC,EAAAC,cAAA,MAAIkB,IAAKD,EAAEpB,IAAKoB,EAAEJ,iBA9BvBM,aAmDJC,sBAbS,SAAAC,GACpB,MAAO,CACHC,KAAMD,EAAMC,KACZhC,KAAM+B,EAAM/B,OAGO,SAAAiC,GACvB,MAAO,CACHC,OAAQ,WACJD,EAASE,kBAINL,CAA6CpC","file":"static/js/2.634fdc02.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {verifyAction} from '../../actions/user';\r\nimport socketClient from '../../utils/socketClient';\r\nimport {Button} from 'antd';\r\nimport {hostConnect, stopStream} from '../../utils/stream';\r\nclass Room extends Component {\r\n    componentDidMount() {\r\n        //this.props.verify();\r\n        if (window.location.href.includes(\"/host\")) {\r\n            hostConnect();\r\n        }\r\n    }\r\n    render() {\r\n        // if (!this.props.user.token) {\r\n        //     return <Redirect to=\"/login\"/>\r\n        // }\r\n        const {room} = this.props;\r\n        const currentRoom = (room.roomList.filter(r => r.id == room.currentRoom))[0] || null;\r\n        return(\r\n            <React.Fragment>\r\n                <div>ROOM</div>\r\n                <div>\r\n                <Link to=\"/home\" \r\n                    onClick={() => {\r\n                        stopStream()\r\n                        socketClient.emitLeftRoom(currentRoom.id, null);\r\n                    }}\r\n                >\r\n                <Button>Back to Home</Button>\r\n                </Link>\r\n                </div>\r\n                <video id=\"myVideo\" width=\"300px\" height=\"300px\" autoPlay></video>\r\n                <ul>\r\n                    <li><b>{currentRoom != null ? currentRoom.host.name : ''}</b></li>\r\n                    {currentRoom != null && currentRoom.peers.length > 0 && currentRoom.peers.map(c => (\r\n                        <li key={c.id}>{c.name}</li>\r\n                    ))}\r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        room: state.room\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        verify: () => {\r\n            dispatch(verifyAction())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Room);"],"sourceRoot":""}