{"version":3,"sources":["containers/Home/Loadable.js","containers/Room/Loadable.js","components/Login/Login.js","App.js","reducers/user.js","reducers/room.js","reducers/index.js","serviceWorker.js","index.js","utils/socketClient.js","utils/stream.js","actions/user.js"],"names":["LoadableComponent","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","react_default","a","createElement","Room_Loadable","Loadable_LoadableComponent","Login","state","name","_this2","this","Fragment","input","value","onChange","setState","target","size","style","width","Link","to","es_button","onClick","props","login","socketClient","emitRegisterNewUser","Component","connect","user","dispatch","loginAction","verify","verifyAction","App","BrowserRouter","Switch","Route","exact","path","component","Home","Room","initState","id","userList","currentRoom","roomList","reducers","combineReducers","arguments","length","undefined","action","type","Object","objectSpread","payload","indexOf","concat","filter","u","token","room","newRoomListJoinRoom","map","peers","peer","newRoomListNotifyJoinRoom","_action$payload","roomID","peerID","removeRoom","newHost","r","newRoomListNotifyUserLeftRoom","shift","host","Boolean","window","location","hostname","match","createLogger","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","socket_io_client__WEBPACK_IMPORTED_MODULE_0__","socket_io_client__WEBPACK_IMPORTED_MODULE_0___default","n","_stream__WEBPACK_IMPORTED_MODULE_1__","io","socket","onNotifyNewUserConnected","data","callback","on","onNotifyUserDisconnected","emit","emitLoadUsers","emitLoadRooms","onNotifyNewRoomHasBeenCreated","newRoom","emitCreateRoom","onNotifyRoomClosed","emitJoinRoom","onNotifyNewUserJoinedRoom","_ref","emitLeftRoom","onNotifyUserLeftRoom","_ref2","emitBroadcastHostShareStream","emitNewPeerGetStream","emitToPeer","onPeerLeftMyRoom","userID","closePeer","onListenPeer","hostCreateConnection","clientCreateConnection","clientAddIceCandidate","candidate","answer","description","stopStream","EXTENSION_ID","localStreams","myPeerArray","iceServers","urls","credential","username","offerOptions","offerToReceiveAudio","offerToReceiveVideo","getVideoStream","_callee4","idElement","stream","C_Users_Minh_Bao_Desktop_streamingvideo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context4","prev","next","mediaDevices","getUserMedia","video","audio","sent","playStream","stop","getScreenStream","chrome","runtime","sendMessage","sources","response","mandatory","chromeMediaSource","chromeMediaSourceId","streamId","returnedStream","catch","err","alert","mediaSource","idVideo","srcObject","ex","peerObject","close","getTracks","forEach","track","hostStopStream","hostGetStream","_hostGetStream","apply","_callee5","screen","_args5","_context5","shareStream","newPeer","RTCPeerConnection","addEventListener","push","i","getCandidateIndexInPeerArray","C_Users_Minh_Bao_Desktop_streamingvideo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee","myNewPeer","_context","addTrack","addStream","createOffer","setLocalDescription","setRemoteDescription","_x2","_x3","index","addIceCandidate","_callee2","_context2","_x4","_x5","_ref3","_callee3","offerDescription","setRemoteForCreateOffer","_context3","createAnswer","_x6","_x7","_x8","d","__webpack_exports__","loadUserListAction","newUserAction","notifyUserDisconnectedAction","users"],"mappings":"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","file":"static/js/main.078b4599.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nconst LoadableComponent = Loadable({\r\n    loader: () => import('./index'),\r\n    loading() {return( <div>Loading</div>)}\r\n})\r\nexport default () => <LoadableComponent />","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nconst LoadableComponent = Loadable({\r\n    loader: () => import('./index'),\r\n    loading() {return( <div>Loading</div>)}\r\n})\r\nexport default () => <LoadableComponent />","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {loginAction, verifyAction} from '../../actions/user';\r\nimport { Input, Button } from 'antd';\r\nimport socketClient from '../../utils/socketClient';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        name: ''\r\n    }\r\n    componentDidMount() {\r\n        //this.props.verify();\r\n    }\r\n    render(){\r\n        // if (this.props.user.token) {\r\n        //     return <Redirect to=\"/\"/>\r\n        // }\r\n        return (\r\n            <React.Fragment>\r\n                <div>Login Page</div>\r\n                Input name:&nbsp;\r\n                <Input \r\n                    value={this.state.name} \r\n                    onChange={(e) => this.setState({name: e.target.value})} \r\n                    size=\"small\" \r\n                    style={{width: '100px'}}\r\n                />\r\n                &nbsp;<Link to=\"/home\"><Button onClick={() => this.props.login(this.state.name, socketClient.emitRegisterNewUser)}>Click to login</Button></Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (name, emitRegisterNewUser) => {\r\n            dispatch(loginAction(name, emitRegisterNewUser))\r\n        },\r\n        verify: () => {\r\n            dispatch(verifyAction())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react';\r\nimport Home from './containers/Home/Loadable';\r\nimport Room from './containers/Room/Loadable';\r\nimport Login from './components/Login/Login';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={Home} />\r\n                    <Route exact path=\"/\" component={Login} />\r\n                    <Route path=\"/room\" component={Room} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}","const initState = {\r\n    name: null,\r\n    id: null,\r\n    userList: []\r\n}\r\nexport default (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOAD_USER_LIST':\r\n            return {\r\n                ...state,\r\n                userList: action.payload\r\n            }\r\n        case 'NEW_USER':\r\n            return {\r\n                ...state,\r\n                userList: state.userList.indexOf(action.payload) == -1 ? state.userList.concat([action.payload]) : state.userList\r\n            }\r\n        case 'NOTIFY_USER_DISCONNECTED':\r\n            return {\r\n                ...state,\r\n                userList: state.userList.filter(u => u.id != action.payload)\r\n            }\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                name: action.payload.name,\r\n                id: action.payload.id\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                name: null,\r\n                id: null,\r\n                userList: []\r\n            }\r\n        case 'VERIFY':\r\n            return {\r\n                token: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initState = {\r\n    currentRoom: '',\r\n    roomList: []\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOAD_ROOM':\r\n            return {\r\n                currentRoom: '',\r\n                roomList: action.payload\r\n            }\r\n        case 'CREATE_ROOM':\r\n            return {\r\n                currentRoom: action.payload.id,\r\n                roomList: state.roomList.indexOf(action.payload) == -1 ? state.roomList.concat([action.payload]) : state.roomList\r\n            }\r\n        case 'NOTIFY_NEW_ROOM_HAS_BEEN_CREATED':\r\n            return {\r\n                ...state,\r\n                roomList: state.roomList.indexOf(action.payload) == -1 ? state.roomList.concat([action.payload]) : state.roomList\r\n            }\r\n        case 'JOIN_ROOM':\r\n            const newRoomListJoinRoom = state.roomList.map(room => {\r\n                if (room.id == action.payload.id) {\r\n                    return {\r\n                        ...room,\r\n                        peers: room.peers.indexOf(action.payload.peer) == -1 ? room.peers.concat([action.payload.peer]) : room.peers\r\n                    }\r\n                }\r\n                return room\r\n            })\r\n            return {\r\n                ...state,\r\n                currentRoom: action.payload.id,\r\n                roomList: newRoomListJoinRoom\r\n            }\r\n        case 'NOTIFY_NEW_PEER_JOINED':\r\n            const newRoomListNotifyJoinRoom = state.roomList.map(room => {\r\n                if (room.id == action.payload.id) {\r\n                    return {\r\n                        ...room,\r\n                        peers: room.peers.indexOf(action.payload.peer) == -1 ? room.peers.concat([action.payload.peer]) : room.peers\r\n                    }\r\n                }\r\n                return room\r\n            })\r\n            return {\r\n                ...state,\r\n                roomList: newRoomListNotifyJoinRoom\r\n            }\r\n        case 'NOTIFY_USER_LEFT_ROOM':\r\n            const {roomID, peerID, removeRoom, newHost} = action.payload;\r\n            if (removeRoom == true) {\r\n                return {\r\n                    ...state,\r\n                    roomList: state.roomList.filter(r => r.id != roomID)\r\n                }\r\n            }\r\n            else {\r\n                const newRoomListNotifyUserLeftRoom = state.roomList.map(r => {\r\n                    if (r.id == roomID) {\r\n                        if (newHost != false) {\r\n                            r.peers.shift()\r\n                        }\r\n                        return {\r\n                            ...r,\r\n                            peers: newHost != false ? r.peers : r.peers.filter(peer => peer.id != peerID),\r\n                            host: newHost != false ? newHost : r.host\r\n                        }\r\n                    }\r\n                    return {\r\n                        ...r\r\n                    }\r\n                })\r\n                return {\r\n                    ...state,\r\n                    roomList: newRoomListNotifyUserLeftRoom\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport user from './user';\r\nimport room from './room';\r\nconst reducers = combineReducers({\r\n    user,\r\n    room\r\n})\r\n\r\nexport default reducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers/index';\r\nimport {Provider} from 'react-redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst logger = createLogger();\r\nconst store = createStore(\r\n    reducers, \r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    // applyMiddleware(thunk, logger)\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nconst Main = () => (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>  \r\n)\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","import socket from 'socket.io-client';\r\nimport {\r\n    clientAddIceCandidate, \r\n    answer,\r\n    hostCreateConnection,\r\n    clientCreateConnection,\r\n    stopStream,\r\n    closePeer\r\n} from './stream';\r\n// const io = socket(`${process.env.BACKEND_IP}:${process.env.BACKEND_PORT}`);\r\nconst io = socket('https://scc-live.herokuapp.com/')\r\n\r\nconst socketClient = {\r\n    onNotifyNewUserConnected: (data, callback) => {\r\n        io.on('notify_new_user_connected', (user) => {\r\n            callback(user)\r\n        });\r\n    },\r\n    onNotifyUserDisconnected: (data, callback) => {\r\n        io.on('notify_user_disconnected', id => {\r\n            callback(id)\r\n        })\r\n    },\r\n    emitRegisterNewUser: (name, callback) => {\r\n        io.emit('register_new_user', name, callback)\r\n    },\r\n    emitLoadUsers: (data, callback) => {\r\n        io.emit('load_users', data, callback)\r\n    },\r\n    emitLoadRooms: (data, callback) => {\r\n        io.emit('load_rooms', data, callback)\r\n    },\r\n    onNotifyNewRoomHasBeenCreated: (data, callback) => {\r\n        io.on('notify_new_room_has_been_created', (newRoom) => {\r\n            callback(newRoom);\r\n        })\r\n    },\r\n    emitCreateRoom: (id, callback) => {\r\n        io.emit('create_room', id, callback)\r\n    },\r\n    onNotifyRoomClosed: (data, callback) => {\r\n        io.on('notify_room_closed', id => {\r\n            callback(id)\r\n        })\r\n    },\r\n    emitJoinRoom: (roomID, callback) => {\r\n        io.emit('join_room', roomID, callback)\r\n    },\r\n    onNotifyNewUserJoinedRoom: (data, callback) => {\r\n        io.on('notify_new_user_joined_room', ({id, peer}) => {\r\n            callback({id,peer})\r\n        });\r\n    },\r\n    emitLeftRoom: (roomID, callback) => {\r\n        io.emit('left_room', roomID, callback)\r\n    },\r\n    onNotifyUserLeftRoom: (data, callback) => {\r\n        io.on('notify_user_left_room', ({\r\n            roomID, peerID, removeRoom, newHost\r\n        }) => {\r\n            callback({\r\n                roomID, peerID, removeRoom, newHost\r\n            })\r\n        })\r\n    },\r\n    emitBroadcastHostShareStream: (roomID) => {\r\n        io.emit('broadcast_host_share_stream', roomID, null);\r\n    },\r\n    emitNewPeerGetStream: (roomID) => {\r\n        io.emit('new_peer_get_stream', roomID);\r\n    },\r\n    emitToPeer: (data, callback) => {\r\n        io.emit('peer_connect', data, callback)\r\n    },\r\n    onPeerLeftMyRoom: () => {\r\n        io.on('peer_close', (userID) => {\r\n            closePeer(userID)\r\n        })\r\n    },\r\n    onListenPeer: () => {\r\n        io.on('peer_connect', (data, callback) => {\r\n            switch(data.type) {\r\n                case 'host_create':\r\n                    hostCreateConnection(data.id, data.roomID)\r\n                    break;\r\n                case 'client_create':\r\n                    clientCreateConnection(data.id, data.roomID)\r\n                    break;\r\n                case 'add':\r\n                    clientAddIceCandidate(data.id, data.candidate)\r\n                    break;\r\n                case 'offer':\r\n                    answer(data.description, data.id, callback)\r\n                    break;\r\n                case 'stop':\r\n                    stopStream()\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default socketClient;","import socketClient from './socketClient';\r\nconst EXTENSION_ID = 'deifcdeanbcgmdahmihammgpkdeddboi';\r\nlet localStreams = [];\r\nlet myPeerArray = [];\r\nconst iceServers = {\r\n    \"iceServers\": [\r\n        {\r\n            urls: [\r\n                'stun:ss-turn1.xirsys.com',\r\n                'turn:ss-turn1.xirsys.com:80?transport=udp',\r\n                'turn:ss-turn1.xirsys.com:3478?transport=udp',\r\n                'turn:ss-turn1.xirsys.com:80?transport=tcp',\r\n                'turn:ss-turn1.xirsys.com:3478?transport=tcp',\r\n                'turns:ss-turn1.xirsys.com:443?transport=tcp',\r\n                'turns:ss-turn1.xirsys.com:5349?transport=tcp'\r\n            ],\r\n            credential: '9d61b156-f159-11e8-807d-32b0c04e5b2c',\r\n            username: '9d61b0d4-f159-11e8-96d8-adf817ff6a2f'\r\n        }\r\n    ]\r\n};\r\nconst offerOptions = {\r\n    offerToReceiveAudio: 1,\r\n    offerToReceiveVideo: 1\r\n  };\r\nasync function getVideoStream(idElement) {\r\n    let stream = await navigator.mediaDevices\r\n    .getUserMedia({\r\n        video: true\r\n        , audio: true\r\n    });\r\n    localStreams[0] = stream;\r\n    localStreams[0].type = 'video';\r\n    playStream(idElement, stream);\r\n}\r\nfunction getScreenStream() {\r\n    try {\r\n        window.chrome.runtime.sendMessage(EXTENSION_ID, { sources:  ['window', 'screen', 'tab']}, response => {\r\n          if (response && response.type === 'success') {\r\n            navigator.mediaDevices.getUserMedia({\r\n              video: {\r\n                mandatory: {\r\n                  chromeMediaSource: 'desktop',\r\n                  chromeMediaSourceId: response.streamId\r\n                }\r\n              }\r\n            }).then(returnedStream => {\r\n              localStreams[1] = returnedStream;\r\n              playStream('myScreen', returnedStream)\r\n            }).catch(err => {\r\n              alert('Không lấy được dữ liệu từ màn hình')\r\n            });\r\n            } else {\r\n              alert('Vui lòng bật plugin')\r\n            }\r\n        })\r\n      } catch(e) {\r\n        navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            mediaSource: ['screen', 'window', 'application']\r\n          }\r\n        }).then(returnedStream => {\r\n          localStreams[1] = returnedStream;\r\n          playStream('myScreen', returnedStream);\r\n        });\r\n      }\r\n}\r\nfunction playStream(idVideo, stream) {\r\n    try {\r\n        var video = document.getElementById(idVideo)\r\n        video.srcObject = stream;\r\n    } catch(ex) {\r\n        stopStream()\r\n    }\r\n}\r\nexport function closeAllPeers(peerArray) {\r\n    peerArray.map(peerObject => {\r\n        peerObject.peer.close();\r\n    })\r\n    return [];\r\n}\r\nexport function stopStream(){\r\n    if (myPeerArray != null) {\r\n        myPeerArray = closeAllPeers(myPeerArray)\r\n    }\r\n    if (localStreams[0]) {          \r\n        localStreams[0].getTracks().forEach((track) => {track.stop();})     \r\n    }\r\n    if (localStreams[1]) {          \r\n        localStreams[1].getTracks().forEach((track) => {track.stop();})     \r\n    }\r\n    localStreams = [];\r\n}\r\nexport function hostStopStream(roomID) {\r\n    socketClient.emitToPeer({\r\n        type: 'stop',\r\n        id: null, roomID\r\n    })\r\n}\r\nexport async function hostGetStream(video = false, screen = false) {\r\n    if (video && screen == false) {\r\n        await stopStream();\r\n        await getVideoStream(\"myScreen\");\r\n    }\r\n    else if (screen && video == false) {\r\n        await stopStream();\r\n        await getScreenStream(\"myScreen\");\r\n    }\r\n    else if (video && screen) {\r\n        await stopStream();\r\n        await getVideoStream(\"myVideo\");\r\n        await getScreenStream(\"myScreen\");\r\n    }\r\n}\r\n\r\nexport function shareStream(roomID) {\r\n    hostStopStream();\r\n    socketClient.emitBroadcastHostShareStream(roomID);\r\n}\r\n\r\nfunction newPeer(userID, roomID) {\r\n    var newPeer = new RTCPeerConnection(iceServers);\r\n    newPeer.addEventListener('icecandidate', (e) => {\r\n        socketClient.emitToPeer({\r\n            type: 'add', \r\n            candidate: e.candidate, \r\n            id: userID, roomID}, null\r\n        )\r\n    })\r\n    newPeer.addEventListener('addstream', (e) => {\r\n        localStreams.push(e.stream);\r\n        if (localStreams.length == 1) {\r\n            playStream(\"myScreen\", e.stream);\r\n        }\r\n        else {\r\n            playStream(\"myVideo\", localStreams[0])\r\n            playStream(\"myScreen\", e.stream);\r\n        }\r\n        \r\n    })\r\n    return newPeer;\r\n}\r\nexport const closePeer = (userID) => {\r\n    for (let i = 0; i < myPeerArray.length; i++) {\r\n        if (myPeerArray[i].userID == userID) {\r\n            myPeerArray[i] = myPeerArray[0];\r\n            myPeerArray.shift();\r\n            break;\r\n        }\r\n    }\r\n}\r\nconst getCandidateIndexInPeerArray = (userID) => {\r\n    for (let i = 0; i < myPeerArray.length; i++) {\r\n        if (myPeerArray[i].userID == userID) {\r\n            return i;\r\n        }\r\n    }\r\n}\r\n\r\nexport const hostCreateConnection = async (userID, roomID) => {\r\n    var myNewPeer = await newPeer(userID, roomID);\r\n    myPeerArray.push({userID, peer: myNewPeer});\r\n    if (localStreams[0]) {\r\n        localStreams[0].getTracks().forEach(track => myNewPeer.addTrack(track, localStreams[0]))\r\n    }\r\n    if (localStreams[1]) {\r\n        myNewPeer.addStream(localStreams[1]);\r\n    }\r\n    const description = await myNewPeer.createOffer(offerOptions);\r\n    myNewPeer.setLocalDescription(description);\r\n\r\n    socketClient.emitToPeer({\r\n        type: 'offer', description,\r\n        id: userID, roomID\r\n    }, \r\n        function(answer) {\r\n            myNewPeer.setRemoteDescription(answer)\r\n        });\r\n}\r\n\r\nexport const clientAddIceCandidate = (userID, candidate) => {\r\n    let index = getCandidateIndexInPeerArray(userID);\r\n    myPeerArray[index].peer.addIceCandidate(candidate);\r\n}\r\n\r\nexport const clientCreateConnection = async (userID, roomID) => {\r\n    var myNewPeer = await newPeer(userID, roomID);\r\n    myPeerArray.push({userID, peer: myNewPeer});\r\n}\r\n\r\nexport const answer = async (offerDescription, userID, setRemoteForCreateOffer) => {\r\n    let index = getCandidateIndexInPeerArray(userID);\r\n    myPeerArray[index].peer.setRemoteDescription(offerDescription);\r\n    let description = await myPeerArray[index].peer.createAnswer();\r\n    myPeerArray[index].peer.setLocalDescription(description);\r\n    setRemoteForCreateOffer(description);\r\n}","//import axios from '../utils/axios';\r\n\r\nexport const loadUserListAction = (users) => (dispatch) => {\r\n    dispatch({\r\n        type: 'LOAD_USER_LIST',\r\n        payload: users\r\n    })\r\n}\r\nexport const newUserAction = (user) => dispatch => {\r\n    dispatch({\r\n        type: 'NEW_USER',\r\n        payload: user\r\n    })\r\n}\r\nexport const notifyUserDisconnectedAction = (id) => dispatch => {\r\n    dispatch({\r\n        type: 'NOTIFY_USER_DISCONNECTED',\r\n        payload: id\r\n    })\r\n}\r\nexport const loginAction = (name, emitRegisterNewUser) => (dispatch) => {  \r\n    emitRegisterNewUser(name, function(name, id) {\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: {name, id}\r\n        })\r\n    });\r\n}\r\n\r\nexport const logoutAction = () => dispatch => {\r\n    dispatch({\r\n        type: 'LOGOUT'\r\n    })\r\n}\r\n\r\nexport const verifyAction = () => dispatch => {\r\n    // const token = localStorage.getItem(\"token\");\r\n    // axios('user/verifytoken', 'GET', null, {\r\n    //     \"Authorization\": \"Bearer \" + token\r\n    // }).then(res => {\r\n    //     // eslint-disable-next-line\r\n    //     const data = res.data.data;\r\n    //     dispatch({\r\n    //         type: 'VERIFY',\r\n    //         payload: token\r\n    //     })\r\n    // }).catch(err => {console.log('Wrong token!')})\r\n    \r\n}"],"sourceRoot":""}