{"version":3,"sources":["components/UserList/UserList.js","components/RoomList/RoomList.js","containers/Home/index.js","actions/room.js"],"names":["columns","title","dataIndex","key","render","text","record","react_default","a","createElement","href","UserList","table","rowKey","id","dataSource","this","props","userList","style","width","React","Component","urlRoom","Link","to","onClick","join","RoomList","roomList","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","generateRoomID","uuidv1","socketClient","onNotifyNewUserConnected","newUser","emitLoadUsers","loadUserList","emitLoadRooms","loadRoomList","onNotifyNewRoomHasBeenCreated","notifyNewRoomHasBeenCreated","onNotifyUserDisconnected","notifyUserDisconnected","onNotifyUserLeftRoom","notifyUserLeftRoom","onNotifyNewUserJoinedRoom","notifyNewPeerJoinedRoom","onConnection","_this2","roomListWithAction","room","map","r","objectSpread","emitJoinRoom","joinRoom","clientConnect","Fragment","emitCreateRoom","createRoom","es_button","RoomList_RoomList_RoomList","UserList_UserList_UserList","user","connect","state","dispatch","verify","verifyAction","users","loadUserListAction","newUserAction","notifyUserDisconnectedAction","rooms","type","payload","loadRoomListAction","newRoom","createRoomAction","notifyNewRoomHasBeenCreatedAction","peer","_ref","joinRoomAction","roomID","peerID","removeRoom","newHost","_ref3","notifyUserLeftRoomAction","_ref2","notifyNewPeerJoinedRoomAction"],"mappings":"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","file":"static/js/1.8db1caac.chunk.js","sourcesContent":["import React from 'react';\r\nimport css from './UserList.css';\r\n\r\nimport { Table, Divider, Tag } from 'antd';\r\n\r\nconst columns = [{\r\n  title: 'Session ID',\r\n  dataIndex: 'id',\r\n  key: 'id'\r\n}, {\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n  key: 'name',\r\n}, {\r\n  title: 'Action',\r\n  key: 'action',\r\n  render: (text, record) => (\r\n    <span>\r\n      <a href=\"javascript:;\">To Do</a>\r\n    </span>\r\n  ),\r\n}];\r\n\r\nexport default class UserList extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>USER LIST</h2>\r\n                <Table rowKey={record => record.id} columns={columns} dataSource={this.props.userList} style={{width: '600px'}}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport css from './RoomList.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Table, Divider, Tag } from 'antd';\r\n\r\nconst columns = [{\r\n  title: 'Room ID',\r\n  dataIndex: 'id',\r\n  key: 'id'\r\n}, {\r\n  title: 'Host',\r\n  dataIndex: 'host.name',\r\n  key: 'host',\r\n}, {\r\n  title: 'Action',\r\n  key: 'action',\r\n  render: (text, record) => {\r\n    let urlRoom = \"/room/\" + record.id;\r\n    return (\r\n      <span>\r\n        <Link to={urlRoom} onClick={record.join}>Join</Link>\r\n      </span>\r\n    )\r\n  },\r\n}];\r\n\r\nexport default class RoomList extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>ROOM LIST</h2>\r\n                <Table \r\n                rowKey={record => record.id} columns={columns} \r\n                dataSource={this.props.roomList} \r\n                style={{width: '600px'}}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {verifyAction, \r\n    loadUserListAction, \r\n    newUserAction,\r\n    notifyUserDisconnectedAction\r\n} from '../../actions/user';\r\nimport {\r\n    loadRoomListAction,\r\n    createRoomAction,\r\n    notifyNewRoomHasBeenCreatedAction,\r\n    joinRoomAction,\r\n    notifyUserLeftRoomAction,\r\n    notifyNewPeerJoinedRoomAction\r\n} from '../../actions/room';\r\nimport {Button} from 'antd';\r\nimport socketClient from '../../utils/socketClient';\r\nimport UserList from '../../components/UserList/UserList';\r\nimport RoomList from '../../components/RoomList/RoomList';\r\nimport uuidv1 from 'uuid/v1';\r\nimport {clientConnect} from '../../utils/stream';\r\nclass Home extends Component {\r\n    constructor() {\r\n        super()\r\n        this.generateRoomID = uuidv1();\r\n    }\r\n    componentDidMount() {\r\n        //this.props.verify();\r\n        socketClient.onNotifyNewUserConnected(null, this.props.newUser);\r\n        socketClient.emitLoadUsers(null, this.props.loadUserList);\r\n        socketClient.emitLoadRooms(null, this.props.loadRoomList);\r\n        socketClient.onNotifyNewRoomHasBeenCreated(null, this.props.notifyNewRoomHasBeenCreated);\r\n        socketClient.onNotifyUserDisconnected(null, this.props.notifyUserDisconnected);\r\n        socketClient.onNotifyUserLeftRoom(null, this.props.notifyUserLeftRoom);\r\n        socketClient.onNotifyNewUserJoinedRoom(null, this.props.notifyNewPeerJoinedRoom);\r\n        socketClient.onConnection();\r\n    }\r\n    render() {\r\n        // if (!this.props.user.token) {\r\n        //     return <Redirect to=\"/login\"/>\r\n        // }\r\n        const urlRoom = \"/room/\" + this.generateRoomID + \"/host\";\r\n        const roomListWithAction = this.props.room.roomList.map(r => ({\r\n            ...r,\r\n            join: () => {socketClient.emitJoinRoom(r.id, this.props.joinRoom)\r\n                    clientConnect(r.id)\r\n                }\r\n        }))\r\n        return(\r\n            <React.Fragment>\r\n                <h1>HOME</h1>\r\n                <Link to={urlRoom} onClick={() => socketClient.emitCreateRoom(this.generateRoomID, this.props.createRoom)}>\r\n                    <Button>Create Room</Button>\r\n                </Link>\r\n                <hr/>\r\n                <RoomList roomList={roomListWithAction}/>\r\n                <UserList userList={this.props.user.userList}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        room: state.room\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        verify: () => {\r\n            dispatch(verifyAction())\r\n        },\r\n        loadUserList: (users) => {\r\n            dispatch(loadUserListAction(users))\r\n        },\r\n        newUser: (user) => {\r\n            dispatch(newUserAction(user))\r\n        },\r\n        notifyUserDisconnected: (id) => {\r\n            dispatch(notifyUserDisconnectedAction(id))\r\n        },\r\n        loadRoomList: (rooms) => {\r\n            dispatch(loadRoomListAction(rooms))\r\n        },\r\n        createRoom: (newRoom) => {\r\n            dispatch(createRoomAction(newRoom))\r\n        },\r\n        notifyNewRoomHasBeenCreated: (newRoom) => {\r\n            dispatch(notifyNewRoomHasBeenCreatedAction(newRoom))\r\n        },\r\n        joinRoom: (id, peer) => {\r\n            dispatch(joinRoomAction(id, peer))\r\n        },\r\n        notifyUserLeftRoom: ({roomID, peerID, removeRoom, newHost}) => {\r\n            dispatch(notifyUserLeftRoomAction({roomID, peerID, removeRoom, newHost}))\r\n        },\r\n        notifyNewPeerJoinedRoom: (id, peer) => {\r\n            dispatch(notifyNewPeerJoinedRoomAction(id, peer))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","\r\nexport const loadRoomListAction = (rooms) => dispatch => {\r\n    dispatch({\r\n        type: 'LOAD_ROOM',\r\n        payload: rooms\r\n    })\r\n}\r\n\r\nexport const notifyNewRoomHasBeenCreatedAction = (newRoom) => dispatch => {\r\n    dispatch({\r\n        type: 'NOTIFY_NEW_ROOM_HAS_BEEN_CREATED',\r\n        payload: newRoom\r\n    })\r\n}\r\nexport const createRoomAction = (newRoom) => dispatch => {\r\n    dispatch({\r\n        type: 'CREATE_ROOM',\r\n        payload: newRoom\r\n    })\r\n}\r\n\r\nexport const joinRoomAction = ({id, peer}) => dispatch => {\r\n    dispatch({\r\n        type: 'JOIN_ROOM',\r\n        payload: {id, peer}\r\n    })\r\n}\r\n\r\nexport const notifyNewPeerJoinedRoomAction = ({id, peer}) => dispatch => {\r\n    dispatch({\r\n        type: 'NOTIFY_NEW_PEER_JOINED',\r\n        payload: {id, peer}\r\n    })\r\n}\r\n\r\nexport const notifyUserLeftRoomAction = ({roomID, peerID, removeRoom, newHost}) => dispatch => {\r\n    dispatch({\r\n        type: 'NOTIFY_USER_LEFT_ROOM',\r\n        payload: {roomID, peerID, removeRoom, newHost}\r\n    })\r\n}"],"sourceRoot":""}