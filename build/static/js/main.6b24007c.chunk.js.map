{"version":3,"sources":["containers/Home/Loadable.js","containers/Room/Loadable.js","components/Login/Login.js","App.js","reducers/user.js","reducers/room.js","reducers/index.js","serviceWorker.js","index.js","utils/socketClient.js","actions/user.js","utils/stream.js"],"names":["LoadableComponent","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","react_default","a","createElement","Room_Loadable","Loadable_LoadableComponent","Login","state","name","_this2","this","Fragment","input","value","onChange","setState","target","size","style","width","Link","to","es_button","onClick","props","login","socketClient","emitRegisterNewUser","Component","connect","user","dispatch","loginAction","verify","verifyAction","App","BrowserRouter","Switch","Route","exact","path","component","Home","Room","initState","userList","currentRoom","roomList","reducers","combineReducers","arguments","length","undefined","action","type","Object","objectSpread","payload","indexOf","concat","filter","u","id","token","room","newRoomListJoinRoom","map","peers","peer","newRoomListNotifyJoinRoom","_action$payload","roomID","peerID","removeRoom","newHost","r","newRoomListNotifyUserLeftRoom","shift","host","Boolean","window","location","hostname","match","createLogger","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","socket_io_client__WEBPACK_IMPORTED_MODULE_0__","socket_io_client__WEBPACK_IMPORTED_MODULE_0___default","n","_stream__WEBPACK_IMPORTED_MODULE_1__","io","socket","onNotifyNewUserConnected","data","callback","on","onNotifyUserDisconnected","emit","emitLoadUsers","emitLoadRooms","onNotifyNewRoomHasBeenCreated","newRoom","console","log","emitCreateRoom","onNotifyRoomClosed","emitJoinRoom","onNotifyNewUserJoinedRoom","_ref","emitLeftRoom","onNotifyUserLeftRoom","_ref2","onUserJoinMyRoom","emitConnection","onConnection","clientAddIceCandidate","candidate","isHost","answer","description","d","__webpack_exports__","loadUserListAction","newUserAction","notifyUserDisconnectedAction","users","localStream","clientPeer","hostPeer","iceServers","urls","credential","username","offerOptions","offerToReceiveAudio","offerToReceiveVideo","playStream","stream","video","muted","controls","srcObject","ex","getTracks","forEach","track","stop","stopStream","hostConnect","C_Users_Minh_Bao_Desktop_streamingvideo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Minh_Bao_Desktop_streamingvideo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","mediaDevices","getUserMedia","audio","sent","createOffer","apply","_callee2","socketId","_context2","RTCPeerConnection","addEventListener","addTrack","setLocalDescription","setRemoteDescription","_x","addIceCandidate","clientConnect","_ref3","_callee3","_context3","streams","_ref4","_callee4","offerDescription","setRemoteForCreateOffer","_context4","createAnswer","_x2","_x3"],"mappings":"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","file":"static/js/main.6b24007c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nconst LoadableComponent = Loadable({\r\n    loader: () => import('./index'),\r\n    loading() {return( <div>Loading</div>)}\r\n})\r\nexport default () => <LoadableComponent />","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nconst LoadableComponent = Loadable({\r\n    loader: () => import('./index'),\r\n    loading() {return( <div>Loading</div>)}\r\n})\r\nexport default () => <LoadableComponent />","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {loginAction, verifyAction} from '../../actions/user';\r\nimport { Input, Button } from 'antd';\r\nimport socketClient from '../../utils/socketClient';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        name: ''\r\n    }\r\n    componentDidMount() {\r\n        //this.props.verify();\r\n    }\r\n    render(){\r\n        // if (this.props.user.token) {\r\n        //     return <Redirect to=\"/\"/>\r\n        // }\r\n        return (\r\n            <React.Fragment>\r\n                <div>Login Page</div>\r\n                Input name:&nbsp;\r\n                <Input \r\n                    value={this.state.name} \r\n                    onChange={(e) => this.setState({name: e.target.value})} \r\n                    size=\"small\" \r\n                    style={{width: '100px'}}\r\n                />\r\n                &nbsp;<Link to=\"/home\"><Button onClick={() => this.props.login(this.state.name, socketClient.emitRegisterNewUser)}>Click to login</Button></Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (name, emitRegisterNewUser) => {\r\n            dispatch(loginAction(name, emitRegisterNewUser))\r\n        },\r\n        verify: () => {\r\n            dispatch(verifyAction())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react';\r\nimport Home from './containers/Home/Loadable';\r\nimport Room from './containers/Room/Loadable';\r\nimport Login from './components/Login/Login';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={Home} />\r\n                    <Route exact path=\"/\" component={Login} />\r\n                    <Route path=\"/room\" component={Room} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}","const initState = {\r\n    name: null,\r\n    userList: []\r\n}\r\nexport default (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOAD_USER_LIST':\r\n            return {\r\n                ...state,\r\n                userList: action.payload\r\n            }\r\n        case 'NEW_USER':\r\n            return {\r\n                ...state,\r\n                userList: state.userList.indexOf(action.payload) == -1 ? state.userList.concat([action.payload]) : state.userList\r\n            }\r\n        case 'NOTIFY_USER_DISCONNECTED':\r\n            return {\r\n                ...state,\r\n                userList: state.userList.filter(u => u.id != action.payload)\r\n            }\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                name: null,\r\n                userList: []\r\n            }\r\n        case 'VERIFY':\r\n            return {\r\n                token: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initState = {\r\n    currentRoom: '',\r\n    roomList: []\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOAD_ROOM':\r\n            return {\r\n                currentRoom: '',\r\n                roomList: action.payload\r\n            }\r\n        case 'CREATE_ROOM':\r\n            return {\r\n                currentRoom: action.payload.id,\r\n                roomList: state.roomList.indexOf(action.payload) == -1 ? state.roomList.concat([action.payload]) : state.roomList\r\n            }\r\n        case 'NOTIFY_NEW_ROOM_HAS_BEEN_CREATED':\r\n            return {\r\n                ...state,\r\n                roomList: state.roomList.indexOf(action.payload) == -1 ? state.roomList.concat([action.payload]) : state.roomList\r\n            }\r\n        case 'JOIN_ROOM':\r\n            const newRoomListJoinRoom = state.roomList.map(room => {\r\n                if (room.id == action.payload.id) {\r\n                    return {\r\n                        ...room,\r\n                        peers: room.peers.indexOf(action.payload.peer) == -1 ? room.peers.concat([action.payload.peer]) : room.peers\r\n                    }\r\n                }\r\n                return room\r\n            })\r\n            return {\r\n                ...state,\r\n                currentRoom: action.payload.id,\r\n                roomList: newRoomListJoinRoom\r\n            }\r\n        case 'NOTIFY_NEW_PEER_JOINED':\r\n            const newRoomListNotifyJoinRoom = state.roomList.map(room => {\r\n                if (room.id == action.payload.id) {\r\n                    return {\r\n                        ...room,\r\n                        peers: room.peers.indexOf(action.payload.peer) == -1 ? room.peers.concat([action.payload.peer]) : room.peers\r\n                    }\r\n                }\r\n                return room\r\n            })\r\n            return {\r\n                ...state,\r\n                roomList: newRoomListNotifyJoinRoom\r\n            }\r\n        case 'NOTIFY_USER_LEFT_ROOM':\r\n            const {roomID, peerID, removeRoom, newHost} = action.payload;\r\n            if (removeRoom == true) {\r\n                return {\r\n                    ...state,\r\n                    roomList: state.roomList.filter(r => r.id != roomID)\r\n                }\r\n            }\r\n            else {\r\n                const newRoomListNotifyUserLeftRoom = state.roomList.map(r => {\r\n                    if (r.id == roomID) {\r\n                        if (newHost != false) {\r\n                            r.peers.shift()\r\n                        }\r\n                        return {\r\n                            ...r,\r\n                            peers: newHost != false ? r.peers : r.peers.filter(peer => peer.id != peerID),\r\n                            host: newHost != false ? newHost : r.host\r\n                        }\r\n                    }\r\n                    return {\r\n                        ...r\r\n                    }\r\n                })\r\n                return {\r\n                    ...state,\r\n                    roomList: newRoomListNotifyUserLeftRoom\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport user from './user';\r\nimport room from './room';\r\nconst reducers = combineReducers({\r\n    user,\r\n    room\r\n})\r\n\r\nexport default reducers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers/index';\r\nimport {Provider} from 'react-redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst logger = createLogger();\r\nconst store = createStore(\r\n    reducers, \r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n    // applyMiddleware(thunk, logger)\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nconst Main = () => (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>  \r\n)\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","import socket from 'socket.io-client';\r\nimport {answer, clientAddIceCandidate} from './stream';\r\n//const io = socket(`${process.env.BACKEND_IP}:${process.env.BACKEND_PORT}`);\r\nconst io = socket('https://scc-live.herokuapp.com/')\r\n\r\nconst socketClient = {\r\n    onNotifyNewUserConnected: (data, callback) => {\r\n        io.on('notify_new_user_connected', (user) => {\r\n            callback(user)\r\n        });\r\n    },\r\n    onNotifyUserDisconnected: (data, callback) => {\r\n        io.on('notify_user_disconnected', id => {\r\n            callback(id)\r\n        })\r\n    },\r\n    emitRegisterNewUser: (name) => {\r\n        io.emit('register_new_user', name)\r\n    },\r\n    emitLoadUsers: (data, callback) => {\r\n        io.emit('load_users', data, callback)\r\n    },\r\n    emitLoadRooms: (data, callback) => {\r\n        io.emit('load_rooms', data, callback)\r\n    },\r\n    onNotifyNewRoomHasBeenCreated: (data, callback) => {\r\n        io.on('notify_new_room_has_been_created', (newRoom) => {\r\n            console.log('New Room has created: ', newRoom);\r\n            callback(newRoom);\r\n        })\r\n    },\r\n    emitCreateRoom: (id, callback) => {\r\n        io.emit('create_room', id, callback)\r\n    },\r\n    onNotifyRoomClosed: (data, callback) => {\r\n        io.on('notify_room_closed', id => {\r\n            console.log('Room: ' + id + ' has closed')\r\n            callback(id)\r\n        })\r\n    },\r\n    emitJoinRoom: (roomID, callback) => {\r\n        io.emit('join_room', roomID, callback)\r\n    },\r\n    onNotifyNewUserJoinedRoom: (data, callback) => {\r\n        io.on('notify_new_user_joined_room', ({id, peer}) => {\r\n            console.log('Room: ' + id + ' - New User has joined:' + peer)\r\n            callback({id,peer})\r\n        });\r\n    },\r\n    emitLeftRoom: (roomID, callback) => {\r\n        io.emit('left_room', roomID, callback)\r\n    },\r\n    onNotifyUserLeftRoom: (data, callback) => {\r\n        io.on('notify_user_left_room', ({\r\n            roomID, peerID, removeRoom, newHost\r\n        }) => {\r\n            callback({\r\n                roomID, peerID, removeRoom, newHost\r\n            })\r\n        })\r\n    },\r\n    onUserJoinMyRoom: (data, callback) => {\r\n        io.on('new_peer', id => {\r\n            callback(id);\r\n        })\r\n    },\r\n    emitConnection: (data, callback) => {\r\n        io.emit('peer_connect', data, callback)\r\n    },\r\n    onConnection: () => {\r\n        io.on('peer_connect', (data, callback) => {\r\n            console.log(data)\r\n            switch(data.type) {\r\n                case 'add':\r\n                    clientAddIceCandidate(data.candidate, data.isHost)\r\n                    return;\r\n                case 'offer':\r\n                    answer(data.description, callback)\r\n                    return;\r\n                default:\r\n                    return;\r\n            }\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport default socketClient;","//import axios from '../utils/axios';\r\n\r\nexport const loadUserListAction = (users) => (dispatch) => {\r\n    dispatch({\r\n        type: 'LOAD_USER_LIST',\r\n        payload: users\r\n    })\r\n}\r\nexport const newUserAction = (user) => dispatch => {\r\n    dispatch({\r\n        type: 'NEW_USER',\r\n        payload: user\r\n    })\r\n}\r\nexport const notifyUserDisconnectedAction = (id) => dispatch => {\r\n    dispatch({\r\n        type: 'NOTIFY_USER_DISCONNECTED',\r\n        payload: id\r\n    })\r\n}\r\nexport const loginAction = (name, emitRegisterNewUser) => (dispatch) => {\r\n    // axios('user/login').then(res => {\r\n        \r\n    // })\r\n    dispatch({\r\n        type: 'LOGIN',\r\n        payload: name\r\n    })\r\n    emitRegisterNewUser(name);\r\n}\r\n\r\nexport const logoutAction = () => dispatch => {\r\n    dispatch({\r\n        type: 'LOGOUT'\r\n    })\r\n}\r\n\r\nexport const verifyAction = () => dispatch => {\r\n    // const token = localStorage.getItem(\"token\");\r\n    // axios('user/verifytoken', 'GET', null, {\r\n    //     \"Authorization\": \"Bearer \" + token\r\n    // }).then(res => {\r\n    //     // eslint-disable-next-line\r\n    //     const data = res.data.data;\r\n    //     dispatch({\r\n    //         type: 'VERIFY',\r\n    //         payload: token\r\n    //     })\r\n    // }).catch(err => {console.log('Wrong token!')})\r\n    \r\n}","import socketClient from './socketClient';\r\nlet localStream;\r\n\r\nlet clientPeer;\r\nlet hostPeer;\r\n\r\nconst iceServers = {\r\n    \"iceServers\": [\r\n        {\r\n            urls: [\r\n                'stun:ss-turn1.xirsys.com',\r\n                'turn:ss-turn1.xirsys.com:80?transport=udp',\r\n                'turn:ss-turn1.xirsys.com:3478?transport=udp',\r\n                'turn:ss-turn1.xirsys.com:80?transport=tcp',\r\n                'turn:ss-turn1.xirsys.com:3478?transport=tcp',\r\n                'turns:ss-turn1.xirsys.com:443?transport=tcp',\r\n                'turns:ss-turn1.xirsys.com:5349?transport=tcp'\r\n            ],\r\n            credential: '9d61b156-f159-11e8-807d-32b0c04e5b2c',\r\n            username: '\t9d61b0d4-f159-11e8-96d8-adf817ff6a2f'\r\n        }\r\n    ]\r\n};\r\nconst offerOptions = {\r\n    offerToReceiveAudio: 1,\r\n    offerToReceiveVideo: 1\r\n  };\r\nfunction getStream() {\r\n    var mediaDevices = navigator.mediaDevices.getUserMedia({video: true, audio: true});\r\n    return mediaDevices;\r\n}\r\n    \r\nfunction playStream(stream, isHost = false) {\r\n    try {\r\n        let video = document.getElementById(\"myVideo\");\r\n        if (isHost) {\r\n            video.muted = true;\r\n            video.controls = false;\r\n        }\r\n        else {\r\n            video.controls = true;\r\n            video.muted = false;\r\n        }\r\n        video.srcObject = stream;\r\n    } catch(ex) {\r\n        if(localStream) {\r\n            localStream.getTracks().forEach((track) => {track.stop();})\r\n        }\r\n    }\r\n}\r\nexport function stopStream(){\r\n    if (localStream) {\r\n        localStream.getTracks().forEach((track) => {track.stop();});\r\n        localStream = null;\r\n    }\r\n}\r\n\r\nexport const hostConnect = async () => {\r\n    localStream = await getStream();\r\n    playStream(localStream, true);\r\n    socketClient.onUserJoinMyRoom(null,createOffer);\r\n}\r\n\r\nconst createOffer = async (socketId) => {\r\n    console.log('create Offer Function');\r\n    hostPeer = new RTCPeerConnection(iceServers);\r\n    hostPeer.addEventListener('icecandidate', (e) => {\r\n        console.log('host send candidate',e.candidate);\r\n        socketClient.emitConnection({type: 'add', candidate: e.candidate, isHost: true})\r\n    })\r\n    localStream.getTracks().forEach(track => hostPeer.addTrack(track, localStream));\r\n\r\n    const description = await hostPeer.createOffer(offerOptions);\r\n    hostPeer.setLocalDescription(description);\r\n\r\n    socketClient.emitConnection({type: 'offer', description,id: socketId}, \r\n        function(answer) {\r\n            hostPeer.setRemoteDescription(answer)\r\n        });\r\n}\r\n\r\nexport const clientAddIceCandidate = (candidate, isHost) => {\r\n    if (isHost) {\r\n        console.log('client add candidate')\r\n        clientPeer.addIceCandidate(candidate)\r\n    } else {\r\n        console.log('host add candidate')\r\n        hostPeer.addIceCandidate(candidate)\r\n    }\r\n}\r\n\r\nexport const clientConnect = async () => {\r\n    console.log('client Connect Function');\r\n    clientPeer = new RTCPeerConnection(iceServers);\r\n    clientPeer.addEventListener('icecandidate', (e) => {\r\n        console.log('client send candidate', e.candidate);\r\n        socketClient.emitConnection({type: 'add', candidate: e.candidate, isHost: false})\r\n    })\r\n    clientPeer.addEventListener('track', (e) => {\r\n        playStream(e.streams[0]);\r\n    })\r\n}\r\n\r\nexport const answer = async (offerDescription, setRemoteForCreateOffer) => {\r\n    console.log('go answer')\r\n    clientPeer.setRemoteDescription(offerDescription);\r\n    const description = await clientPeer.createAnswer();\r\n    clientPeer.setLocalDescription(description);\r\n    setRemoteForCreateOffer(description);\r\n}"],"sourceRoot":""}